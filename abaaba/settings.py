"""
Django settings for abaaba project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 我们希望apps目录也和templates和static目录一样自动识别
# 为系统添加一个路径，0表示把此目录添加到最前面  后面的参数是插入的路径
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '((fg^_37zvt#8vh_61)=_zb98mzwj+g91&q0+sf-leru3ehciw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'movies',
    'order',
    "haystack",  # 注册全文搜索框架
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'abaaba.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'abaaba.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {# 写(主机)
        'ENGINE': 'django.db.backends.mysql', # 数据库引擎
        'NAME': "abaaba", # 数据库名
        "USER": "root", # 用户名
        "PASSWORD": "111111", # 用户名对应密码
        "HOST": "192.168.0.104", # 数据库主机服务器
        "PORT": 3306, # 数据库端口号
    },
    'slave':{ # 读（从机）
    'ENGINE': 'django.db.backends.mysql',
    "HOST": "192.168.0.104",
    "PORT": 8306,
    "USER": "root",
    "PASSWORD": "mysql",
    'NAME': "abaaba",
    }
}

# 使用django认证系统中的模型类
AUTH_USER_MODEL = "user.User"

# 配置Django的文件存储类
DEFAULT_FILE_STORAGE = "utils.fdfs.storage.FDFSStorage"

FDFS_CLIENT_CONF = "./utils/fdfs/client.conf"
FDFS_BASE_URL = "http://192.168.0.104:7766/"

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# 发送邮箱配置
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# smtp服务器地址
EMAIL_HOST = "smtp.163.com"
# smtp服务器端口号
EMAIL_PORT = 25
# 发送邮件的邮箱
EMAIL_HOST_USER = "d1933541241@163.com"
# 在邮箱中获取客户端授权码
EMAIL_HOST_PASSWORD = "MWDFAHFUKBZDXXLY"
# 收件人看到的发件人信息
EMAIL_FROM = "小破站来消息啦<d1933541241@163.com>"

# 将登录的状态信息保存在redis中  如果redis有密码，需要在地址中加入密码 redis://[:password]@localhost:6379/0
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://:111111@192.168.0.104:6379/6",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎
        "ENGINE": "haystack.backends.whoosh_cn_backend.WhooshEngine",
        # 索引文件目录
        "PATH": os.path.join(BASE_DIR, "whoosh_index"),
    }
}

# 添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 设置每页显示的数目，默认为20，可以自己修改
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 6


# 配置重定向
LOGIN_URL = '/user/login/'

STATIC_ROOT = "/var/www/abaaba/static"
# MYSQL 读写分离路由
DATABASE_ROUTERS = ['utils.db_router.MasterSlaveDBRouter']